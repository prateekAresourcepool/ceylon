"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var antd_1 = require("antd");
var TableHeader_1 = require("./TableHeader");
var def_1 = require("./def");
var LocalDatasource_1 = require("@phantomit/datasource/lib/local/LocalDatasource");
var Cell_1 = require("./Cell");
var Datasource_1 = require("@phantomit/datasource/lib/Datasource");
var definition_1 = require("@phantomit/datasource/lib/utils/definition");
var icons_1 = require("@ant-design/icons");
var ColumnSettings_1 = require("./ColumnSettings");
var Importer_1 = require("./Importer");
var NewRecord_1 = require("./NewRecord");
var FilterDropDown_1 = require("./FilterDropDown");
var moment_1 = __importDefault(require("moment"));
var rc_resize_observer_1 = __importDefault(require("rc-resize-observer"));
exports.TableWrap = function (props) {
    var _a, _b, _c, _d, _e;
    var source = props.source || new LocalDatasource_1.LocalDatasource();
    var _f = react_1.default.useState({
        columns: ((_a = props.cfg) === null || _a === void 0 ? void 0 : _a.columns) ? JSON.parse(JSON.stringify(props.cfg.columns)) : [],
        action: { key: def_1.ActionType.init },
        edit: undefined,
        selected: 0
    }), opt = _f[0], setOpt = _f[1];
    source.subscribe("trigger", {
        type: Datasource_1.EventType.custom,
        handler: function (key, data) { return __awaiter(void 0, void 0, void 0, function () {
            var _a, _b, action, value;
            return __generator(this, function (_c) {
                if (data != null) {
                    _a = data.data, _b = _a === void 0 ? { action: def_1.ActionType.none, value: undefined } : _a, action = _b.action, value = _b.value;
                    switch (action) {
                        case def_1.ActionType.refresh:
                            setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.refresh } }));
                            break;
                        case def_1.ActionType.update:
                            setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.update, value: value } }));
                            break;
                        case def_1.ActionType.select:
                            setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.select, value: value } }));
                            break;
                    }
                }
                return [2 /*return*/];
            });
        }); }
    });
    var getActionColumnDef = function (cfg) {
        var _a, _b, _c, _d, _e;
        var required = ((_a = cfg) === null || _a === void 0 ? void 0 : _a.delete) || ((_b = cfg) === null || _b === void 0 ? void 0 : _b.edit) || ((_c = cfg) === null || _c === void 0 ? void 0 : _c.select) || ((_d = cfg) === null || _d === void 0 ? void 0 : _d.customActions);
        if (required) {
            var col = {
                type: definition_1.ColumnType.string,
                dataIndex: "",
                title: function () {
                    var _a;
                    return react_1.default.createElement(antd_1.Badge, { showZero: false, count: opt.selected },
                        react_1.default.createElement("span", { style: { padding: 5 } }, ((_a = props.cfg) === null || _a === void 0 ? void 0 : _a.actionColumnName) || "Actions"));
                },
                fixed: "left",
                width: ((_e = props.cfg) === null || _e === void 0 ? void 0 : _e.actionColumnWidth) || 120
            };
            col["render"] = function (value, row, index) {
                var _a, _b, _c, _d, _e;
                if (((_a = opt.edit) === null || _a === void 0 ? void 0 : _a.id) !== index) {
                    return react_1.default.createElement(react_1.default.Fragment, { key: index + ".action.edit" },
                        react_1.default.createElement(antd_1.Space, null,
                            ((_b = cfg) === null || _b === void 0 ? void 0 : _b.select) && react_1.default.createElement(antd_1.Checkbox, { checked: source.isSelected(index), disabled: props.validateAction && props.validateAction("select", source.row(undefined, index), index), onChange: function (e) {
                                    var state = e.target.checked;
                                    if (source.isSelected(index) !== state)
                                        setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.select, value: { index: index, state: state } } }));
                                } }),
                            ((_c = cfg) === null || _c === void 0 ? void 0 : _c.edit) && react_1.default.createElement(antd_1.Button, { icon: react_1.default.createElement(icons_1.EditOutlined, null), disabled: props.validateAction && props.validateAction("edit", source.row(undefined, index), index), onClick: function (e) {
                                    var editor = { id: index, value: source.row(undefined, index) };
                                    setOpt(__assign(__assign({}, opt), { edit: editor }));
                                } }),
                            ((_d = cfg) === null || _d === void 0 ? void 0 : _d.delete) && react_1.default.createElement(antd_1.Button, { icon: react_1.default.createElement(icons_1.DeleteOutlined, null), disabled: props.validateAction && props.validateAction("delete", source.row(undefined, index), index), onClick: function (e) {
                                    setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.remove, value: index } }));
                                } }),
                            ((_e = cfg) === null || _e === void 0 ? void 0 : _e.customActions) && cfg.customActions(source.row(undefined, index), index)));
                }
                else {
                    return react_1.default.createElement(react_1.default.Fragment, { key: index + ".action.apply" },
                        react_1.default.createElement(antd_1.Button, { style: { marginLeft: 26 }, icon: react_1.default.createElement(icons_1.CheckOutlined, null), onClick: function (e) {
                                var _a;
                                var updated = (_a = opt.edit) === null || _a === void 0 ? void 0 : _a.value;
                                setOpt(__assign(__assign({}, opt), { edit: undefined, action: { key: def_1.ActionType.update, value: updated } }));
                            } }),
                        react_1.default.createElement(antd_1.Button, { style: { marginLeft: 5 }, icon: react_1.default.createElement(icons_1.CloseOutlined, null), onClick: function (e) {
                                setOpt(__assign(__assign({}, opt), { edit: undefined }));
                            } }));
                }
            };
            return col;
        }
        return null;
    };
    var filter = function (column) {
        if (column.filter) {
            return {
                filterDropdown: function (_a) {
                    var setSelectedKeys = _a.setSelectedKeys, selectedKeys = _a.selectedKeys, confirm = _a.confirm, clearFilters = _a.clearFilters;
                    var selected = selectedKeys[0];
                    return react_1.default.createElement(react_1.default.Fragment, null,
                        react_1.default.createElement(FilterDropDown_1.FilterDropDown, { column: column, selected: selected, clear: function () {
                                clearFilters();
                                setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.filter, value: {
                                            key: column.dataIndex,
                                            filter: undefined //{eq:undefined,lt:undefined,gt:undefined} as Filter
                                        } } }));
                            }, filter: function (options) {
                                if (options)
                                    setSelectedKeys([options]);
                                confirm();
                                setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.filter, value: {
                                            key: column.dataIndex,
                                            filter: options
                                        } } }));
                            }, distinct: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, source.distinct(column.dataIndex)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            }); }); } }));
                }
            };
        }
        else {
            return {};
        }
    };
    var columns = opt.columns.filter(function (q) { return q.visible; }).map(function (_a, colIndex) {
        var render = _a.render, dataIndex = _a.dataIndex, type = _a.type, editable = _a.editable, dateOut = _a.dateOut, o = __rest(_a, ["render", "dataIndex", "type", "editable", "dateOut"]);
        return (__assign(__assign(__assign({}, o), { dataIndex: dataIndex,
            type: type,
            dateOut: dateOut, render: function (value, row, index) {
                var _a;
                var cell = source.cell(dataIndex, index);
                return react_1.default.createElement(react_1.default.Fragment, { key: index + "." + colIndex + "." + dataIndex },
                    react_1.default.createElement(Cell_1.CellContent, { type: type, value: opt.edit ? opt.edit.value[dataIndex] : cell.value, formatted: cell.formatted, edit: editable && ((_a = opt.edit) === null || _a === void 0 ? void 0 : _a.id) === index, onChange: function (e) {
                            var _a, _b;
                            var _c = opt.edit, id = _c.id, value = _c.value;
                            if (type === definition_1.ColumnType.date) {
                                setOpt(__assign(__assign({}, opt), { edit: { id: id, value: __assign(__assign({}, value), (_a = {}, _a[dataIndex] = moment_1.default(e).format(dateOut), _a)) } }));
                            }
                            else
                                setOpt(__assign(__assign({}, opt), { edit: { id: id, value: __assign(__assign({}, value), (_b = {}, _b[dataIndex] = e, _b)) } }));
                        } }));
            } }), filter(__assign(__assign({}, o), { type: type, dataIndex: dataIndex, dateOut: dateOut }))));
    });
    var actionCol = getActionColumnDef(props.cfg);
    if (actionCol) {
        (_b = columns) === null || _b === void 0 ? void 0 : _b.unshift(actionCol);
    }
    var startAction = react_1.default.useCallback(function (action, value) { return __awaiter(void 0, void 0, void 0, function () {
        var _a, cols, rows, header, blob, elem, url, dataIndex, filter_1, index, state, rows, updated, _b;
        var _c, _d;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    _a = action;
                    switch (_a) {
                        case def_1.ActionType.search: return [3 /*break*/, 1];
                        case def_1.ActionType.init: return [3 /*break*/, 3];
                        case def_1.ActionType.refresh: return [3 /*break*/, 5];
                        case def_1.ActionType.add: return [3 /*break*/, 7];
                        case def_1.ActionType.export: return [3 /*break*/, 8];
                        case def_1.ActionType.import: return [3 /*break*/, 10];
                        case def_1.ActionType.settings: return [3 /*break*/, 11];
                        case def_1.ActionType.remove: return [3 /*break*/, 12];
                        case def_1.ActionType.update: return [3 /*break*/, 14];
                        case def_1.ActionType.sort: return [3 /*break*/, 16];
                        case def_1.ActionType.filter: return [3 /*break*/, 18];
                        case def_1.ActionType.select: return [3 /*break*/, 20];
                        case def_1.ActionType.saveColumn: return [3 /*break*/, 22];
                    }
                    return [3 /*break*/, 26];
                case 1: return [4 /*yield*/, source.search(value)];
                case 2:
                    _e.sent();
                    return [3 /*break*/, 26];
                case 3: return [4 /*yield*/, source.init(props.server)];
                case 4:
                    _e.sent();
                    if (props.cfg)
                        source.generateFormatters((_c = props.cfg) === null || _c === void 0 ? void 0 : _c.columns);
                    return [3 /*break*/, 26];
                case 5: return [4 /*yield*/, source.refresh()];
                case 6:
                    _e.sent();
                    return [3 /*break*/, 26];
                case 7: return [2 /*return*/];
                case 8:
                    cols = columns.filter(function (q) { return q.dataIndex.trim() !== ""; });
                    return [4 /*yield*/, source.exportView(cols.map(function (o) { return o.dataIndex; }))];
                case 9:
                    rows = _e.sent();
                    header = cols.map(function (o) { return "\"" + o.title + "\""; }).join(",");
                    rows.unshift(header);
                    blob = new Blob([rows.join("\n")], { type: 'text/csv' });
                    elem = window.document.createElement('a');
                    url = window.URL.createObjectURL(blob);
                    elem.href = url;
                    elem.download = "ant-d.csv";
                    document.body.appendChild(elem);
                    elem.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(elem);
                    return [3 /*break*/, 26];
                case 10: return [2 /*return*/];
                case 11: return [2 /*return*/];
                case 12: return [4 /*yield*/, source.delete(value)];
                case 13:
                    _e.sent();
                    return [3 /*break*/, 26];
                case 14: return [4 /*yield*/, source.save(value)];
                case 15:
                    _e.sent();
                    return [3 /*break*/, 26];
                case 16: return [4 /*yield*/, source.setViewExpression(undefined, [value], undefined)];
                case 17:
                    _e.sent();
                    return [3 /*break*/, 26];
                case 18:
                    dataIndex = value.key, filter_1 = value.filter;
                    return [4 /*yield*/, source.filter(dataIndex, filter_1)];
                case 19:
                    _e.sent();
                    return [3 /*break*/, 26];
                case 20:
                    index = value.index, state = value.state;
                    return [4 /*yield*/, source.select(index, state)];
                case 21:
                    rows = _e.sent();
                    setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.none }, selected: rows.length }));
                    return [2 /*return*/];
                case 22:
                    if (!((_d = props.cfg) === null || _d === void 0 ? void 0 : _d.onColumnUpdate)) return [3 /*break*/, 24];
                    return [4 /*yield*/, props.cfg.onColumnUpdate(value)];
                case 23:
                    _b = _e.sent();
                    return [3 /*break*/, 25];
                case 24:
                    _b = value;
                    _e.label = 25;
                case 25:
                    updated = _b;
                    setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.none }, columns: __spreadArrays(updated) }));
                    return [2 /*return*/];
                case 26:
                    setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.none } }));
                    return [2 /*return*/];
            }
        });
    }); }, [columns, opt, props.cfg, props.server, source]);
    react_1.default.useEffect(function () {
        if (opt.action.key !== def_1.ActionType.none) {
            var action = opt.action;
            console.log(opt.action.key);
            startAction(action.key, action.value);
        }
    }, [opt, startAction]);
    var _g = react_1.default.useState({ width: 0, height: 0 }), size = _g[0], setSize = _g[1];
    return react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { style: { display: 'flex', flexFlow: 'column', height: '100%' } },
            ((_c = props.cfg) === null || _c === void 0 ? void 0 : _c.header) && react_1.default.createElement("div", { style: { flex: '0 1 auto' } },
                react_1.default.createElement(TableHeader_1.TableHeader, { cfg: props.cfg, title: props.cfg.tableName, onAction: function (action, value) { return __awaiter(void 0, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            setOpt(__assign(__assign({}, opt), { action: { key: action, value: value } }));
                            return [2 /*return*/, true];
                        });
                    }); } })),
            react_1.default.createElement("div", { style: { flex: '1 1 auto' } },
                react_1.default.createElement(rc_resize_observer_1.default, { onResize: function (_a) {
                        var width = _a.width, height = _a.height;
                        setSize({ width: width - 20, height: height - 40 });
                    } },
                    react_1.default.createElement("div", { style: { width: '100%', height: '100%' } },
                        react_1.default.createElement(antd_1.Table, { rowKey: "__id__", size: "small", loading: opt.action.key !== def_1.ActionType.none || props.loading, scroll: { x: props.scrollX || size.width, y: props.scrollY || size.height }, tableLayout: "auto", onChange: function (pagination, filters, sorter, extra) {
                                var action = extra.action;
                                if (action === "sort") {
                                    var field = sorter.field, order = sorter.order;
                                    var sort = order === "ascend" ? Datasource_1.Sort.ASC : order === "descend" ? Datasource_1.Sort.DESC : Datasource_1.Sort.NONE;
                                    if (field)
                                        setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.sort, value: { key: field, sort: sort } } }));
                                }
                            }, columns: columns, pagination: false, dataSource: source.view.map(function (i) { return ({ __id__: i }); }), rowClassName: function (r, index) {
                                var _a;
                                var cls = props.rowClass && props.rowClass(source.row(undefined, index), index);
                                return ((_a = opt.edit) === null || _a === void 0 ? void 0 : _a.id) != null && index !== opt.edit.id ? "ant-spin-blur" : "";
                            } })))),
            ((_d = props.cfg) === null || _d === void 0 ? void 0 : _d.footer) && react_1.default.createElement("div", { style: { flex: '0 1 40px', padding: 5 } },
                react_1.default.createElement(antd_1.Space, null, props.cfg.footer))),
        props.cfg && react_1.default.createElement(ColumnSettings_1.ColumnSettings, { columns: opt.columns, visible: opt.action.key === def_1.ActionType.settings, onApply: function (columns) {
                setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.saveColumn, value: columns } }));
            }, onCancel: function () {
                setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.none } }));
            } }),
        props.cfg && react_1.default.createElement(Importer_1.Importer, { onClose: function () { return setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.none } })); }, visible: opt.action.key === def_1.ActionType.import, columns: opt.columns, save: function (row) { return __awaiter(void 0, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, source.append(row)];
                        case 1:
                            _a.sent();
                            return [2 /*return*/, true];
                    }
                });
            }); } }),
        ((_e = props.cfg) === null || _e === void 0 ? void 0 : _e.add) && react_1.default.createElement(NewRecord_1.NewRecord, { columns: props.cfg.columns, visible: opt.action.key === def_1.ActionType.add, onSubmit: function (value) { return __awaiter(void 0, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, source.append(value)];
                        case 1:
                            _a.sent();
                            return [2 /*return*/, true];
                    }
                });
            }); }, onClose: function () {
                setOpt(__assign(__assign({}, opt), { action: { key: def_1.ActionType.none } }));
            } }));
};
