/// <reference types="react" />
import { Datasource, Row, serverInfo } from "@phantomit/datasource/lib/Datasource";
import { Table, Column } from "@phantomit/datasource/lib/utils/definition";
export declare enum ActionType {
    search = 0,
    init = 1,
    refresh = 2,
    add = 3,
    export = 4,
    import = 5,
    settings = 6,
    remove = 7,
    update = 8,
    sort = 9,
    filter = 10,
    select = 11,
    saveColumn = 12,
    none = 13
}
export interface ColumnConfig extends Column {
    width?: number;
    dataIndex: string;
    fixed?: boolean | "left" | "right";
    visible?: boolean;
    schemaIndex?: number;
    required?: boolean;
    render?: (value: any, row: any, index: any) => any;
    sorter?: boolean;
}
export interface TableConfig extends Table {
    columns: ColumnConfig[];
    minWidth?: number;
    onColumnUpdate?: (columns: ColumnConfig[]) => Promise<ColumnConfig[]>;
    actionColumnName?: string;
    actionColumnWidth?: number;
    import?: boolean;
    export?: boolean;
    settings?: boolean;
    header?: boolean;
    buttons?: JSX.Element[];
    footer?: JSX.Element;
    customActions?: (row: Row, index: number) => JSX.Element | JSX.Element[];
}
export interface TableProps {
    source?: Datasource;
    server: serverInfo;
    cfg?: TableConfig;
    rowClass?: (row: {
        [key: string]: any;
    }, index: number) => string;
    validateAction?: (type: "select" | "edit" | "delete", row: {
        [key: string]: any;
    }, index: number) => boolean;
    scrollX?: number | string;
    scrollY?: number | string;
    loading?: boolean;
}
