"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var antd_1 = require("antd");
var Form_1 = require("antd/lib/form/Form");
var definition_1 = require("@phantomit/datasource/lib/utils/definition");
var NewRecordAction;
(function (NewRecordAction) {
    NewRecordAction[NewRecordAction["adaAndClose"] = 0] = "adaAndClose";
    NewRecordAction[NewRecordAction["add"] = 1] = "add";
    NewRecordAction[NewRecordAction["reset"] = 2] = "reset";
    NewRecordAction[NewRecordAction["none"] = 3] = "none";
})(NewRecordAction = exports.NewRecordAction || (exports.NewRecordAction = {}));
exports.NewRecord = function (props) {
    var _a;
    var form = Form_1.useForm()[0];
    var _b = react_1.default.useState({ action: NewRecordAction.none }), opt = _b[0], setOpt = _b[1];
    var items = (_a = props.columns) === null || _a === void 0 ? void 0 : _a.map(function (o) {
        switch (o.type) {
            case definition_1.ColumnType.string:
                return react_1.default.createElement(antd_1.Form.Item, { key: o.dataIndex, name: o.dataIndex, label: o.title, required: o.required, rules: [{ required: o.required }] },
                    react_1.default.createElement(antd_1.Input, null));
            case definition_1.ColumnType.int:
                return react_1.default.createElement(antd_1.Form.Item, { key: o.dataIndex, name: o.dataIndex, label: o.title, required: o.required, rules: [{ required: o.required }] },
                    react_1.default.createElement(antd_1.InputNumber, { precision: 0 }));
            case definition_1.ColumnType.float:
                return react_1.default.createElement(antd_1.Form.Item, { key: o.dataIndex, name: o.dataIndex, label: o.title, required: o.required, rules: [{ required: o.required }] },
                    react_1.default.createElement(antd_1.InputNumber, { precision: o.decimal || 2 }));
            case definition_1.ColumnType.boolean:
                return react_1.default.createElement(antd_1.Form.Item, { key: o.dataIndex, name: o.dataIndex, label: o.title, required: o.required, rules: [{ required: o.required }], valuePropName: "checked" },
                    react_1.default.createElement(antd_1.Checkbox, null));
            case definition_1.ColumnType.date:
                return react_1.default.createElement(antd_1.Form.Item, { key: o.dataIndex, name: o.dataIndex, label: o.title, required: o.required, rules: [{ required: o.required }] },
                    react_1.default.createElement(antd_1.DatePicker, null));
            case definition_1.ColumnType.currency:
                return react_1.default.createElement(antd_1.Form.Item, { key: o.dataIndex, name: o.dataIndex, label: o.title, required: o.required, rules: [{ required: o.required }] },
                    react_1.default.createElement(antd_1.InputNumber, { precision: 2 }));
            default:
                return null;
        }
    });
    var submit = react_1.default.useCallback(function (action, value) { return __awaiter(void 0, void 0, void 0, function () {
        var state;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, props.onSubmit(value)];
                case 1:
                    state = _a.sent();
                    setOpt(__assign(__assign({}, opt), { action: NewRecordAction.none, value: undefined }));
                    if (state) {
                        form.resetFields();
                        if (action === NewRecordAction.adaAndClose)
                            props.onClose();
                    }
                    return [2 /*return*/];
            }
        });
    }); }, [form, opt, props]);
    react_1.default.useEffect(function () {
        if (opt.action !== NewRecordAction.none)
            if (opt.value !== undefined)
                submit(opt.action, opt.value);
    }, [opt, submit]);
    return react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(antd_1.Modal, { onCancel: function () {
                props.onClose();
            }, visible: props.visible, width: "50vw", title: "Add New Record", centered: true, footer: [
                react_1.default.createElement(antd_1.Button, { style: { float: 'left' }, key: 0, type: "primary", onClick: function () {
                        setOpt(__assign(__assign({}, opt), { action: NewRecordAction.add, value: form.getFieldsValue() }));
                    } }, "Add Another"),
                react_1.default.createElement(antd_1.Button, { key: 1, type: "default", onClick: function () {
                        form.resetFields();
                    } }, "Clear"),
                react_1.default.createElement(antd_1.Button, { key: 2, type: "primary", onClick: function () {
                        setOpt(__assign(__assign({}, opt), { action: NewRecordAction.adaAndClose, value: form.getFieldsValue() }));
                    } }, "Save")
            ] },
            react_1.default.createElement("div", { style: { width: '100%', height: '60vh', overflowY: 'auto' } },
                react_1.default.createElement(antd_1.Form, { labelCol: { span: 6 }, wrapperCol: { span: 18 }, form: form, name: "em", scrollToFirstError: true }, items))));
};
