import React from "react";
import { ColumnConfig } from "./def";
import { Datasource, fetchOptions } from "@phantomit/datasource/lib/Datasource";
export interface TableActions {
    columnName?: string;
    width?: number;
    select?: boolean;
    refresh?: boolean;
    add?: boolean;
    delete?: boolean;
    edit?: boolean;
    search?: boolean;
    import?: boolean;
    export?: boolean;
    settings?: boolean;
}
export interface TableProps {
    source: Datasource;
    fetch: (options?: fetchOptions) => Promise<{
        [key: string]: any;
    }[]>;
    save: (row: {
        [key: string]: any;
    }) => Promise<{
        [key: string]: any;
    }>;
    delete: (row: {
        [key: string]: any;
    }) => Promise<{
        [key: string]: any;
    }>;
    columns: () => Promise<ColumnConfig[]>;
    saveColumn: (columns: ColumnConfig[]) => Promise<ColumnConfig[]>;
    minWidth?: number;
    title: string;
    actions?: TableActions;
    footer?: JSX.Element;
    header?: boolean;
    headerButtons?: JSX.Element[];
    customActions?: (row: any, index: number) => JSX.Element | JSX.Element[];
    rowClass?: (row: {
        [key: string]: any;
    }, index: number) => string;
    validateAction?: (type: "select" | "edit" | "delete", row: {
        [key: string]: any;
    }, index: number) => boolean;
    scrollX?: number | string;
    scrollY?: number | string;
    loading?: boolean;
}
export declare const Table: React.FunctionComponent<TableProps>;
