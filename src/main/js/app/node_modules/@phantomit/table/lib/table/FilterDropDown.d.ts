import React from "react";
import { ColumnConfig } from "./def";
import { Filter } from "@phantomit/datasource/lib/Datasource";
export interface FilterElementProps {
    onChange: (filter: Filter) => void;
    type: "multiple" | "single";
    values?: Filter;
    distinct: () => Promise<object>;
}
export interface NumberFilterProps extends Filter {
    eq: number;
    lt: number;
    gt: number;
}
export interface NumberProps extends FilterElementProps {
    values?: NumberFilterProps;
}
export declare const NumericFilter: React.FunctionComponent<NumberProps>;
export interface TextFilterProps extends Filter {
    eq: string[];
}
export interface TextProps extends FilterElementProps {
    values?: TextFilterProps;
}
export declare const TextFilter: React.FunctionComponent<TextProps>;
export declare const SelectFilter: React.FunctionComponent<FilterElementProps>;
export interface DateFilterProps {
    eq?: string;
    lt?: string;
    gt?: string;
}
export interface DateProps extends FilterElementProps {
    values?: DateFilterProps;
    dateOut?: string | ((value: string) => string);
}
export declare const DateFilter: React.FunctionComponent<DateProps>;
export interface BooleanFilterProps {
    eq?: boolean[];
}
export interface BooleanProps extends FilterElementProps {
    values?: BooleanFilterProps;
}
export declare const BooleanFilter: React.FunctionComponent<BooleanProps>;
export interface FilterProps {
    column: ColumnConfig;
    selected?: Filter;
    distinct: () => Promise<object>;
    filter: (options?: Filter) => void;
    clear: () => void;
}
export declare const FilterDropDown: React.FunctionComponent<FilterProps>;
