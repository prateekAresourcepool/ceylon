"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalDatasource = void 0;
var Datasource_1 = require("../Datasource");
var utils_1 = require("../utils/utils");
var definition_1 = require("../utils/definition");
var LocalDatasource = /** @class */ (function () {
    function LocalDatasource() {
        var _this = this;
        this.view = [];
        this.subscribers = {};
        this.viewExpression = { filters: {}, sort: [] };
        this.rows = [];
        this.selected = [];
        this.formatter = {};
        this.options = {
            delete: function (row1) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, row1];
            }); }); },
            save: function (row1) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, row1];
            }); }); },
            fetch: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, []];
            }); }); }
        };
    }
    LocalDatasource.prototype.append = function (row) {
        return __awaiter(this, void 0, void 0, function () {
            var out, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.options.save) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.options.save(row)];
                    case 1:
                        _a = _b.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _a = row;
                        _b.label = 3;
                    case 3:
                        out = _a;
                        this.rows.push(out);
                        return [4 /*yield*/, this.updateIndex()];
                    case 4:
                        _b.sent();
                        return [4 /*yield*/, this._toView()];
                    case 5:
                        _b.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.append, out)];
                    case 6:
                        _b.sent();
                        return [2 /*return*/, []];
                }
            });
        });
    };
    LocalDatasource.prototype.updateIndex = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.rows.forEach(function (value, index) { return value.__id__ = index; });
                return [2 /*return*/, this.rows];
            });
        });
    };
    LocalDatasource.prototype._toView = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, search, filters, sort, view, sortInfo;
            var _this = this;
            return __generator(this, function (_b) {
                _a = this.viewExpression, search = _a.search, filters = _a.filters, sort = _a.sort;
                view = this.rows.filter(function (row, index) {
                    var filtered = !filters ? false : Object.entries(filters)
                        .some(function (_a) {
                        var key = _a[0], filter = _a[1];
                        if (filter.eq != null) {
                            if (Array.isArray(filter.eq)) {
                                var eq = filter.eq;
                                return !eq.some(function (f) { return f === row[key]; });
                            }
                            else
                                return row[key] !== filter.eq;
                        }
                        else if (filter.lt != null && filter.gt != null) {
                            return utils_1.compare(row[key], filter.gt) > 0 || utils_1.compare(row[key], filter.lt) < 0;
                            //return row[key] >= filter.lt && row[key] <= filter.gt
                        }
                        else if (filter.lt != null) {
                            return utils_1.compare(row[key], filter.lt) > 0;
                        }
                        else if (filter.gt != null) {
                            return utils_1.compare(row[key], filter.gt) < 0;
                        }
                        return false;
                    });
                    if (filtered)
                        return false;
                    return !search ? true : Object.keys(row).find(function (key) { return _this._formattedValue(row, key, index).includes(search); });
                });
                sortInfo = sort.filter(function (_a) {
                    var sort = _a.sort;
                    return sort !== Datasource_1.Sort.NONE;
                });
                this.view = view.sort(function (a, b) {
                    for (var _i = 0, sortInfo_1 = sortInfo; _i < sortInfo_1.length; _i++) {
                        var _a = sortInfo_1[_i], key = _a.key, sort_1 = _a.sort;
                        var c = utils_1.compare(a[key], b[key]);
                        if (c != 0) {
                            return c * sort_1;
                        }
                    }
                    return 0;
                }).map(function (_a, index) {
                    var __id__ = _a.__id__;
                    return __id__;
                });
                return [2 /*return*/];
            });
        });
    };
    LocalDatasource.prototype._formattedValue = function (row, key, viewIndex) {
        return this.formatter[key] ? this.formatter[key].value(row, key, viewIndex, undefined) : "" + (row[key] || "");
    };
    LocalDatasource.prototype.cell = function (key, viewIndex, columnIndex) {
        if (viewIndex < this.view.length) {
            var index = this.view[viewIndex];
            var row = this.rows[index] || {};
            return { value: row[key], formatted: this._formattedValue(row, key, viewIndex) };
        }
        return { value: null, formatted: "" };
    };
    LocalDatasource.prototype.delete = function (viewIndex) {
        return __awaiter(this, void 0, void 0, function () {
            var index, rows;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(viewIndex < this.view.length)) return [3 /*break*/, 6];
                        index = this.view[viewIndex];
                        rows = this.rows.splice(index, 1);
                        if (!this.options.delete) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.options.delete(rows[0])];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [4 /*yield*/, this.updateIndex()];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this._toView()];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.delete, rows[0])];
                    case 5:
                        _a.sent();
                        return [2 /*return*/, rows[0]];
                    case 6: return [2 /*return*/, {}];
                }
            });
        });
    };
    LocalDatasource.prototype.filter = function (key, value) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (value)
                            this.viewExpression.filters[key] = value;
                        else {
                            this.viewExpression.filters = Object.entries(this.viewExpression.filters).reduce(function (acc, _a) {
                                var fkey = _a[0], f = _a[1];
                                if (key !== fkey)
                                    acc[fkey] = f;
                                return acc;
                            }, {});
                        }
                        return [4 /*yield*/, this._toView()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.filter)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, []];
                }
            });
        });
    };
    LocalDatasource.prototype.row = function (rowIndex, viewIndex) {
        if (rowIndex !== undefined) {
            return this.rows[rowIndex];
        }
        else if (viewIndex != undefined) {
            var index = this.view[viewIndex];
            return this.rows[index];
        }
        return {};
    };
    LocalDatasource.prototype.save = function (row) {
        return __awaiter(this, void 0, void 0, function () {
            var out, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.options.save) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.options.save(row)];
                    case 1:
                        _a = _b.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _a = row;
                        _b.label = 3;
                    case 3:
                        out = _a;
                        Object.assign(this.rows[row.__id__], out);
                        return [4 /*yield*/, this._toView()];
                    case 4:
                        _b.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.save, this.rows[row.__id__])];
                    case 5:
                        _b.sent();
                        return [2 /*return*/, this.rows[row.__id__]];
                }
            });
        });
    };
    LocalDatasource.prototype.search = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.viewExpression.search = value;
                        return [4 /*yield*/, this._toView()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.search)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, []];
                }
            });
        });
    };
    LocalDatasource.prototype.select = function (viewIndex, checked) {
        return __awaiter(this, void 0, void 0, function () {
            var index_1;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(viewIndex !== undefined)) return [3 /*break*/, 5];
                        index_1 = this.view[viewIndex];
                        if (!checked) return [3 /*break*/, 3];
                        if (!!this.selected.includes(index_1)) return [3 /*break*/, 2];
                        this.selected.push(index_1);
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.select, this.selected)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [3 /*break*/, 5];
                    case 3:
                        this.selected = this.selected.filter(function (i) { return i !== index_1; });
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.select, this.selected)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/, this.selected.map(function (value) { return _this.rows[value]; })];
                }
            });
        });
    };
    LocalDatasource.prototype.sort = function (key, sort) {
        return __awaiter(this, void 0, void 0, function () {
            var item;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        item = this.viewExpression.sort.filter(function (_a, index) {
                            var id = _a.key;
                            return key === id;
                        });
                        item.push({ key: key, sort: sort });
                        this.viewExpression.sort = item;
                        return [4 /*yield*/, this._toView()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.sort)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, []];
                }
            });
        });
    };
    LocalDatasource.prototype.size = function () {
        return this.view.length;
    };
    LocalDatasource.prototype.init = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Object.assign(this.options, options);
                        this.viewExpression = { sort: [], filters: {} };
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.initialize)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.refresh()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    LocalDatasource.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = this;
                        if (!this.options.fetch) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.options.fetch()];
                    case 1:
                        _b = _c.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _b = [];
                        _c.label = 3;
                    case 3:
                        _a.rows = _b;
                        return [4 /*yield*/, this.updateIndex()];
                    case 4:
                        _c.sent();
                        return [4 /*yield*/, this._toView()];
                    case 5:
                        _c.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.fetch)];
                    case 6:
                        _c.sent();
                        return [2 /*return*/, true];
                }
            });
        });
    };
    LocalDatasource.prototype.clear = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (options.filter)
                            this.viewExpression.filters = {};
                        if (options.sort)
                            this.viewExpression.sort = [];
                        if (options.search)
                            this.viewExpression.search = undefined;
                        return [4 /*yield*/, this._toView()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.clear)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, true];
                }
            });
        });
    };
    LocalDatasource.prototype.addFormatter = function (key, format) {
        this.formatter[key] = format;
        return false;
    };
    LocalDatasource.prototype.generateFormatters = function (columns) {
        var _this = this;
        columns.forEach(function (value, index) {
            var format = definition_1.formatter(value);
            _this.addFormatter(format.key, format);
        });
        return true;
    };
    LocalDatasource.prototype.isSelected = function (viewIndex) {
        if (viewIndex != undefined) {
            var index = this.view[viewIndex];
            return this.selected.includes(index);
        }
        return false;
    };
    LocalDatasource.prototype.notify = function (type, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, Promise.all(Object.values(this.subscribers).filter(function (q) { return q.type === undefined || q.type === type; }).map(function (o) { return o.handler(type, data); }))];
            });
        });
    };
    LocalDatasource.prototype.exportView = function (keys) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.notify(Datasource_1.EventType.export)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, this.view.map(function (i, index) { return keys.map(function (key) {
                                var formatted = _this.cell(key, index, undefined).formatted;
                                return formatted.includes(",") ? "\"" + formatted + "\"" : formatted;
                            }).join(','); })];
                }
            });
        });
    };
    LocalDatasource.prototype.setViewExpression = function (filters, sort, search) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!filters) return [3 /*break*/, 2];
                        this.viewExpression = __assign(__assign({}, this.viewExpression), { filters: filters });
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.filter)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        if (!sort) return [3 /*break*/, 4];
                        this.viewExpression = __assign(__assign({}, this.viewExpression), { sort: sort });
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.sort)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        if (!search) return [3 /*break*/, 6];
                        this.viewExpression = __assign(__assign({}, this.viewExpression), { search: search });
                        return [4 /*yield*/, this.notify(Datasource_1.EventType.search)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [4 /*yield*/, this._toView()];
                    case 7:
                        _a.sent();
                        return [2 /*return*/, true];
                }
            });
        });
    };
    LocalDatasource.prototype.distinct = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.view.reduce(function (acc, current) {
                        var _a;
                        var cell = _this.cell(key, current, undefined);
                        return __assign(__assign({}, acc), (_a = {}, _a[cell.value] = cell.formatted, _a));
                    }, {})];
            });
        });
    };
    LocalDatasource.prototype.subscribe = function (key, handler) {
        this.subscribers[key] = handler;
    };
    LocalDatasource.prototype.unsubscribe = function (key) {
        delete this.subscribers[key];
    };
    LocalDatasource.prototype.trigger = function (key, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.notify(key, { key: key, data: data })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return LocalDatasource;
}());
exports.LocalDatasource = LocalDatasource;
