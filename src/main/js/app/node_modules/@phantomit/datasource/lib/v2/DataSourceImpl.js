"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataSourceImpl = exports.FilterSet = exports.DataView = exports.PropertyId = exports.Sequence = void 0;
var DataSource_1 = require("./DataSource");
var Formatter_1 = require("./Formatter");
var Filters_1 = require("./Filters");
function EventHook(type) {
    return function preEventHook(target, propertyKey, descriptor) {
        var value = descriptor.value;
        descriptor.value = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var self, _a, _b, listener, _c, onBefore, onAfter, onError, data, e_1;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            self = this;
                            _a = self.listeners, _b = type, listener = _a[_b];
                            _c = listener || {}, onBefore = _c.onBefore, onAfter = _c.onAfter, onError = _c.onError;
                            _d.label = 1;
                        case 1:
                            _d.trys.push([1, 7, , 11]);
                            if (!onBefore) return [3 /*break*/, 3];
                            return [4 /*yield*/, onBefore.apply(this, [{ key: type, payload: { args: __spreadArrays(args) } }])];
                        case 2:
                            _d.sent();
                            _d.label = 3;
                        case 3: return [4 /*yield*/, value.apply(this, args)];
                        case 4:
                            data = _d.sent();
                            if (!onAfter) return [3 /*break*/, 6];
                            return [4 /*yield*/, onAfter.apply(this, [{ key: type, payload: { args: __spreadArrays(args), data: data } }])];
                        case 5:
                            _d.sent();
                            _d.label = 6;
                        case 6: return [3 /*break*/, 11];
                        case 7:
                            e_1 = _d.sent();
                            if (!onError) return [3 /*break*/, 9];
                            return [4 /*yield*/, onError(e_1)];
                        case 8:
                            _d.sent();
                            return [3 /*break*/, 10];
                        case 9:
                            console.warn(e_1);
                            _d.label = 10;
                        case 10: return [3 /*break*/, 11];
                        case 11: return [2 /*return*/];
                    }
                });
            });
        };
    };
}
var Sequence = /** @class */ (function () {
    function Sequence(width) {
        if (width === void 0) { width = 6; }
        this.current = 0;
        this.width = width;
    }
    Sequence.prototype.id = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.current = this.current + 1;
                return [2 /*return*/, ("" + this.current).padStart(this.width, '0')];
            });
        });
    };
    Sequence.prototype.reset = function () {
        this.current = 0;
    };
    return Sequence;
}());
exports.Sequence = Sequence;
var PropertyId = /** @class */ (function () {
    function PropertyId(name) {
        this.name = name;
    }
    PropertyId.prototype.id = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, id;
            return __generator(this, function (_c) {
                _a = value, _b = this.name, id = _a[_b];
                return [2 /*return*/, "" + id];
            });
        });
    };
    PropertyId.prototype.reset = function () { };
    return PropertyId;
}());
exports.PropertyId = PropertyId;
var DataView = /** @class */ (function () {
    function DataView(seq) {
        this.data = {};
        this.view = [];
        this.selection = [];
        this.sequence = seq;
    }
    DataView.prototype._add = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var seq;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sequence.id(value)];
                    case 1:
                        seq = _a.sent();
                        this.data[seq] = __assign({ __id__: seq }, value);
                        return [2 /*return*/];
                }
            });
        });
    };
    DataView.prototype._remove = function (rows) {
        return __awaiter(this, void 0, void 0, function () {
            var ids;
            var _this = this;
            return __generator(this, function (_a) {
                ids = rows.map(function (o) {
                    delete _this.data[o.__id__];
                    return o.__id__;
                });
                this.view = this.view.filter(function (o) { return !ids.includes(o); });
                return [2 /*return*/];
            });
        });
    };
    DataView.prototype._update = function (row) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.data[row.__id__] = row;
                return [2 /*return*/];
            });
        });
    };
    DataView.prototype._clear = function (width) {
        if (width === void 0) { width = 6; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.data = {};
                this.view = [];
                this.selection = [];
                this.sequence.reset();
                return [2 /*return*/];
            });
        });
    };
    DataView.prototype._clearSelection = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.selection = [];
                return [2 /*return*/];
            });
        });
    };
    DataView.prototype.size = function () {
        return this.view.length;
    };
    DataView.prototype.total = function () {
        return Object.keys(this.data).length;
    };
    DataView.prototype.row = function (index) {
        var id = this.view[index];
        return this.data["" + id];
    };
    DataView.prototype.value = function (index, name) {
        return (this.row(index) || {})[name];
    };
    DataView.prototype.selected = function (index) {
        var id = this.view[index];
        return this.selection.includes("" + id);
    };
    DataView.prototype._select = function (index, state) {
        return __awaiter(this, void 0, void 0, function () {
            var id;
            return __generator(this, function (_a) {
                id = this.view[index];
                if (id) {
                    if (state)
                        this.selection.push(id);
                    else
                        this.selection = this.selection.filter(function (o) { return o !== id; });
                }
                return [2 /*return*/];
            });
        });
    };
    return DataView;
}());
exports.DataView = DataView;
var FilterSet = /** @class */ (function () {
    function FilterSet() {
        this.filters = {};
    }
    FilterSet.prototype.add = function (filter, name) {
        this.filters[name || filter.name] = filter;
    };
    FilterSet.prototype.remove = function (name) {
        delete this.filters[name];
    };
    FilterSet.prototype.filter = function () {
        return Object.values(this.filters).reduce(function (acc, cur) { return new Filters_1.And(acc, cur); });
    };
    return FilterSet;
}());
exports.FilterSet = FilterSet;
var DataSourceImpl = /** @class */ (function (_super) {
    __extends(DataSourceImpl, _super);
    function DataSourceImpl(persistence, id) {
        var _this = _super.call(this, id || new Sequence(6)) || this;
        _this.listeners = {};
        _this.formatters = {};
        _this.properties = {};
        _this.sequenceDigits = 6;
        _this._filter = undefined;
        _this._search = undefined;
        _this._sort = undefined;
        _this.persistence = persistence;
        return _this;
    }
    DataSourceImpl.prototype.addListener = function (listener) {
        var _a;
        this.listeners = __assign(__assign({}, this.listeners), (_a = {}, _a[listener.key] = listener, _a));
    };
    DataSourceImpl.prototype.init = function (props, seqDigits) {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.sequenceDigits = seqDigits || 6;
                        return [4 /*yield*/, this._clear(seqDigits)];
                    case 1:
                        _a.sent();
                        this.formatters = props.reduce(function (acc, cur) {
                            var format = Formatter_1.createFormatter(cur);
                            if (format)
                                acc[cur.name] = format;
                            return acc;
                        }, {});
                        this.properties = props.reduce(function (acc, cur) {
                            acc[cur.name] = cur;
                            return acc;
                        }, {});
                        if (!this.persistence) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.persistence.fetch()];
                    case 2:
                        res = _a.sent();
                        return [4 /*yield*/, this.add(res.rows)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.delete = function (row) {
        return __awaiter(this, void 0, void 0, function () {
            var values;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.persistence && this.persistence.delete)) return [3 /*break*/, 3];
                        return [4 /*yield*/, Promise.all(row.map(function (_a) { return __awaiter(_this, void 0, void 0, function () {
                                var __id__ = _a.__id__, args = __rest(_a, ["__id__"]);
                                return __generator(this, function (_b) {
                                    return [2 /*return*/, (__assign({}, args))];
                                });
                            }); }))];
                    case 1:
                        values = _a.sent();
                        return [4 /*yield*/, this.persistence.delete(values)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2 /*return*/, this._remove(row)];
                }
            });
        });
    };
    DataSourceImpl.prototype.add = function (values) {
        return __awaiter(this, void 0, void 0, function () {
            var _i, values_1, v;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _i = 0, values_1 = values;
                        _a.label = 1;
                    case 1:
                        if (!(_i < values_1.length)) return [3 /*break*/, 4];
                        v = values_1[_i];
                        return [4 /*yield*/, this._add(v)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [4 /*yield*/, this.updateView()];
                    case 5:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._clear(this.sequenceDigits)];
                    case 1:
                        _a.sent();
                        if (!this.persistence) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.persistence.fetch()];
                    case 2:
                        res = _a.sent();
                        return [4 /*yield*/, this.add(res.rows)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.clean = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._clear(this.sequenceDigits)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DataSourceImpl.prototype.save = function (rows) {
        return __awaiter(this, void 0, void 0, function () {
            var values, res;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.persistence && this.persistence.save)) return [3 /*break*/, 4];
                        return [4 /*yield*/, Promise.all(rows.map(function (_a) { return __awaiter(_this, void 0, void 0, function () {
                                var __id__ = _a.__id__, args = __rest(_a, ["__id__"]);
                                return __generator(this, function (_b) {
                                    return [2 /*return*/, (__assign({}, args))];
                                });
                            }); }))];
                    case 1:
                        values = _a.sent();
                        return [4 /*yield*/, this.persistence.save(values)];
                    case 2:
                        res = _a.sent();
                        return [4 /*yield*/, this.add(res.rows)];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 7];
                    case 4: return [4 /*yield*/, Promise.all(rows.map(function (o) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, this._update(o)];
                                case 1: return [2 /*return*/, _a.sent()];
                            }
                        }); }); }))];
                    case 5:
                        _a.sent();
                        return [4 /*yield*/, this.updateView()];
                    case 6:
                        _a.sent();
                        _a.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.filter = function (filter) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this._filter = filter;
                        return [4 /*yield*/, this.updateView()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.search = function (text) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this._search = new Filters_1.Any(text);
                        return [4 /*yield*/, this.updateView()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.sort = function (sort) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this._sort = sort;
                        return [4 /*yield*/, this.updateView()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.select = function (index, state) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._select(index, state)];
            });
        });
    };
    DataSourceImpl.prototype.formatted = function (index, name) {
        return __awaiter(this, void 0, void 0, function () {
            var row, _a, _b, format;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, this.row(index)];
                    case 1:
                        row = _c.sent();
                        _a = this.formatters, _b = name, format = _a[_b];
                        if (!format) return [3 /*break*/, 3];
                        return [4 /*yield*/, format.format(this.properties[name], row, row[name])];
                    case 2: return [2 /*return*/, _c.sent()];
                    case 3: return [2 /*return*/, row[name]];
                }
            });
        });
    };
    DataSourceImpl.prototype.addFormatter = function (format, combine) {
        var _a = this.formatters, _b = format.name, f = _a[_b];
        if (combine && f) {
            this.formatters[format.name] = new Formatter_1.Combine(format.name, f, format);
        }
        else
            this.formatters[format.name] = format;
    };
    DataSourceImpl.prototype.property = function (name) {
        return this.properties[name];
    };
    DataSourceImpl.prototype.updateView = function () {
        return __awaiter(this, void 0, void 0, function () {
            var f, _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        f = this._filter;
                        if (f && this._search)
                            f = new Filters_1.And(f, this._search);
                        else if (this._search) {
                            f = this._search;
                        }
                        if (!f) return [3 /*break*/, 2];
                        _a = this;
                        return [4 /*yield*/, Promise.all(Object.values(this.data).filter(function (o, i) { return __awaiter(_this, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            if (!f) return [3 /*break*/, 2];
                                            return [4 /*yield*/, f.validator(o, i)];
                                        case 1: return [2 /*return*/, _a.sent()];
                                        case 2: return [2 /*return*/, false];
                                    }
                                });
                            }); }).map(function (p) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                                return [2 /*return*/, p.__id__];
                            }); }); }))];
                    case 1:
                        _a.view = _b.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.view = Object.keys(this.data);
                        _b.label = 3;
                    case 3:
                        if (this._sort) {
                            this.view = this.view.sort(function (a, b) {
                                var _a = _this.data, _b = a, left = _a[_b], _c = b, right = _a[_c];
                                if (_this._sort)
                                    return _this._sort.handler(left, right);
                                return 0;
                            });
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    DataSourceImpl.prototype.slice = function (from, to) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all(this.view.slice(from, to).map(function (o) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            return [2 /*return*/, this.data[o]];
                        }); }); }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    __decorate([
        EventHook(DataSource_1.EventType.Init)
    ], DataSourceImpl.prototype, "init", null);
    __decorate([
        EventHook(DataSource_1.EventType.Remove)
    ], DataSourceImpl.prototype, "delete", null);
    __decorate([
        EventHook(DataSource_1.EventType.Add)
    ], DataSourceImpl.prototype, "add", null);
    __decorate([
        EventHook(DataSource_1.EventType.Refresh)
    ], DataSourceImpl.prototype, "refresh", null);
    __decorate([
        EventHook(DataSource_1.EventType.Clean)
    ], DataSourceImpl.prototype, "clean", null);
    __decorate([
        EventHook(DataSource_1.EventType.Update)
    ], DataSourceImpl.prototype, "save", null);
    __decorate([
        EventHook(DataSource_1.EventType.Filter)
    ], DataSourceImpl.prototype, "filter", null);
    __decorate([
        EventHook(DataSource_1.EventType.Search)
    ], DataSourceImpl.prototype, "search", null);
    __decorate([
        EventHook(DataSource_1.EventType.Sort)
    ], DataSourceImpl.prototype, "sort", null);
    __decorate([
        EventHook(DataSource_1.EventType.Select)
    ], DataSourceImpl.prototype, "select", null);
    return DataSourceImpl;
}(DataView));
exports.DataSourceImpl = DataSourceImpl;
