import { LocalDatasource } from "./local/LocalDatasource";
declare const _default: {
    local: {
        source: typeof LocalDatasource;
    };
    v2: {
        Datasource: typeof import("./v2/DataSourceImpl").DataSourceImpl;
        FilterSet: typeof import("./v2/DataSourceImpl").FilterSet;
        PropertyId: typeof import("./v2/DataSourceImpl").PropertyId;
        Sort: {
            SortBy: typeof import("./v2/Sort").SortBy;
            Then: typeof import("./v2/Sort").Then;
        };
        Filters: {
            And: typeof import("./v2/Filters").And;
            Any: typeof import("./v2/Filters").Any;
            Contains: typeof import("./v2/Filters").Contains;
            NotContains: typeof import("./v2/Filters").NotContains;
            Equal: typeof import("./v2/Filters").Equal;
            GreaterThanOrEqual: typeof import("./v2/Filters").GreaterThanOrEqual;
            GreaterThan: typeof import("./v2/Filters").GreaterThan;
            LessThanOrEqual: typeof import("./v2/Filters").LessThanOrEqual;
            LessThan: typeof import("./v2/Filters").LessThan;
            Not: typeof import("./v2/Filters").Not;
            Or: typeof import("./v2/Filters").Or;
        };
        Format: {
            Combine: typeof import("./v2/Formatter").Combine;
            ArrayFormat: typeof import("./v2/Formatter").ArrayFormat;
            SuffixFormat: typeof import("./v2/Formatter").SuffixFormat;
            PrefixFormat: typeof import("./v2/Formatter").PrefixFormat;
            DateFormat: typeof import("./v2/Formatter").DateFormat;
            NumberFormat: typeof import("./v2/Formatter").NumberFormat;
            CurrencyFormat: typeof import("./v2/Formatter").CurrencyFormat;
            EnumFormat: typeof import("./v2/Formatter").EnumFormat;
            createFormatter: typeof import("./v2/Formatter").createFormatter;
        };
    };
};
export default _default;
